// sort array
sort(arr, arr + n)

//sort string
sort(str.begin(), str.end())


/* string diff , intersection  and union */
    std::string string1 = "abdulll";
    std::string string2 = "lovelly";
    std::string string_difference, string_intersection, string_union;

    std::sort(string1.begin(), string1.end());
    std::sort(string2.begin(), string2.end());

    std::set_difference(string1.begin(), string1.end(), string2.begin(), string2.end(), std::back_inserter(string_difference));
    std::cout << "In string1 but not string2: " << string_difference << std::endl;

    std::set_intersection(string1.begin(), string1.end(), string2.begin(), string2.end(), std::back_inserter(string_intersection));
    std::cout << "string1 intersect string2: " << string_intersection <<  "lenght = " << string_intersection.length() <<std::endl;

    std::set_union(string1.begin(), string1.end(), string2.begin(), string2.end(), std::back_inserter(string_union));
    std::cout << "string1 union string2: " << string_union << std::endl;

// removal of duplicate char from stirng
s.erase(std::unique(s.begin(), s.end()), s.end());

